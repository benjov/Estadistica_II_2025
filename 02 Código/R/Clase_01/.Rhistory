sheet = 'SaldoBancos')
SB_table$Fecha_Registro <- as.Date(SB_table$Fecha_Registro, "%d/%m/%y")
SB_table$Saldo <- as.double(SB_table$Saldo)
FN_table <- read_sheet('https://docs.google.com/spreadsheets/d/184TDvFxAn8JrVnjmeBPjWNc0h004IkGEDE6kjBgC4Uk/edit?usp=sharing',
sheet = 'Financiamiento')
FN_table$Fecha_Registro <- as.Date(FN_table$Fecha_Registro, "%d/%m/%y")
FN_table$Saldo <- as.double(FN_table$Saldo)
LC_table <- read_sheet('https://docs.google.com/spreadsheets/d/184TDvFxAn8JrVnjmeBPjWNc0h004IkGEDE6kjBgC4Uk/edit?usp=sharing',
sheet = 'Financiamiento_LC')
LC_table$Fecha <- as.Date(LC_table$Fecha, "%d/%m/%y")
LC_table$Cargo <- as.double(LC_table$Cargo)
LC_table$Abono <- as.double(LC_table$Abono)
LC_table$Saldo <- as.double(LC_table$Saldo)
Dias_CXC_table <- read_sheet('https://docs.google.com/spreadsheets/d/184TDvFxAn8JrVnjmeBPjWNc0h004IkGEDE6kjBgC4Uk/edit?usp=sharing',
sheet = 'Dias_CXC')
Dias_CXC_table$Fecha_Registro <- as.Date(Dias_CXC_table$Fecha_Registro, "%d/%m/%y")
Dias_CXC_table$Saldo <- as.double(Dias_CXC_table$Saldo)
Dias_CXC_table$Fecha_Cobro <- as.Date(Dias_CXC_table$Fecha_Cobro, "%d/%m/%y")
Dias_CXP_table <- read_sheet('https://docs.google.com/spreadsheets/d/184TDvFxAn8JrVnjmeBPjWNc0h004IkGEDE6kjBgC4Uk/edit?usp=sharing',
sheet = 'Dias_CXP')
Dias_CXP_table$Fecha_Registro <- as.Date(Dias_CXP_table$Fecha_Registro, "%d/%m/%y")
Dias_CXP_table$Saldo <- as.double(Dias_CXP_table$Saldo)
Dias_CXP_table$Fecha_Pago <- as.Date(Dias_CXP_table$Fecha_Pago, "%d/%m/%y")
Dias_CXC_table
#
#####
# CXC
CXC <- reactiveVal(CXC_table)
Dias_CXC <- reactiveVal(Dias_CXC_table)
Clientes = Dias_CXC()
Clientes
Clientes = Dias_CXC()
Dias_CXC()
Dias_CXC_table
Dias_CXC_table
Dias_CXC_table
Clientes_table <- subset( Dias_CXC_table, (Cobrado == 'SI') | (Cobrado == 'Si') | (Cobrado == 'si') |
(Cobrado == 'Sí') | (Cobrado == 'Sí') | (Cobrado == 'sí') )
Clientes_table$Dias <- Clientes_table$Fecha_Pago - Clientes_table$Fecha_Registro
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
View(CXC_table)
CXC_table
Clientes_table <- CXC_table
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_1_a_30[Clientes_table$Dias <= 30] <- Clientes_table$Saldo[Clientes_table$Dias <= 30]
Clientes_table$Saldo[Clientes_table$Dias <= 30]
Clientes_table
Clientes_table$Saldo[Clientes_table$Dias <= 30]
Clientes_table$De_1_a_30[Clientes_table$Dias <= 30]
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_1_a_30[Clientes_table$Dias <= 30]
Clientes_table$De_1_a_30[Clientes_table$Dias <= 30] <- Clientes_table$Saldo[Clientes_table$Dias <= 30]
Clientes_table <- CXC_table
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias > 30) | (Clientes_table$Dias <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias > 60) | (Clientes_table$Dias <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
Clientes_table
Clientes_table
Clientes_table
Clientes_table <- CXC_table
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias > 30) & (Clientes_table$Dias <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias > 60) & (Clientes_table$Dias <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
Clientes_table
Clientes_table
View(Clientes_table)
Clientes_table <- CXC_table
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
View(Clientes_table)
View(Clientes_table)
Clientes_table <- Clientes_table %>% filter(!is.na(Cliente)) %>% group_by(Cliente) %>%
summarise( Saldo = sum(as.numeric(Saldo), na.rm=TRUE),
Documentos = n(),
Dias = mean(Dias, na.rm=TRUE),
De_1_a_30 = sum(as.numeric(De_1_a_30), na.rm=TRUE),
De_31_a_60 = sum(as.numeric(De_31_a_60), na.rm=TRUE),
De_61_a_90 = sum(as.numeric(De_61_a_90), na.rm=TRUE),
Mas_de_90 = sum(as.numeric(Mas_de_90), na.rm=TRUE) )
View(Clientes_table)
View(Clientes_table)
Clientes_table
fig_07 <- plot_ly( Clientes_table, labels = ~Clientes_table$Cliente,
values = ~Clientes_table$Saldo/1000, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', comma(Clientes_table$Saldo/1000), ' miles'),
marker = list(colors = Clientes_table$Saldo,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE )
fig_07 <- fig_07 %>% layout(title = '',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig_07
Clientes_table
Clientes_table <- CXC() #CXC_table
runApp('Documents/Personal/Analytics_Boutique/Tesoreria/Alfa/App_01')
Clientes_table = CXC() #CXC_table
CXC_table = CXC()
Clientes_table = CXC_table #CXC()
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}else{
if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
} }
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
Clientes_table = CXC_table #CXC()
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
# if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
#   Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
# }
# if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
#   Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
# }
# if(Clientes_table$Dias[i] > 90){
#   Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
# }
}
Clientes_table = CXC_table #CXC()
Clientes_table <- Clientes_table %>% filter(!is.na(Cliente))
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
# if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
#   Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
# }
# if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
#   Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
# }
# if(Clientes_table$Dias[i] > 90){
#   Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
# }
}
Clientes_table = CXC_table #CXC()
Clientes_table <- Clientes_table %>% filter(!is.na(Cliente))
Clientes_table$Dias <- Clientes_table$Fecha_Cobro - Clientes_table$Fecha_Registro
Clientes_table$De_1_a_30 <- 0
Clientes_table$De_31_a_60 <- 0
Clientes_table$De_61_a_90 <- 0
Clientes_table$Mas_de_90 <- 0
for( i in 1 : dim(Clientes_table)[1] ){
if(Clientes_table$Dias[i] <= 30){
Clientes_table$De_1_a_30[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 30) & (Clientes_table$Dias[i] <= 60)){
Clientes_table$De_31_a_60[i] <- Clientes_table$Saldo[i]
}
if((Clientes_table$Dias[i] > 60) & (Clientes_table$Dias[i] <= 90)){
Clientes_table$De_61_a_90[i] <- Clientes_table$Saldo[i]
}
if(Clientes_table$Dias[i] > 90){
Clientes_table$Mas_de_90[i] <- Clientes_table$Saldo[i]
}
}
Clientes_table <- Clientes_table %>% group_by(Cliente) %>%
summarise( Saldo = sum(as.numeric(Saldo), na.rm=TRUE),
Documentos = n(),
Dias = mean(Dias, na.rm=TRUE),
De_1_a_30 = sum(as.numeric(De_1_a_30), na.rm=TRUE),
De_31_a_60 = sum(as.numeric(De_31_a_60), na.rm=TRUE),
De_61_a_90 = sum(as.numeric(De_61_a_90), na.rm=TRUE),
Mas_de_90 = sum(as.numeric(Mas_de_90), na.rm=TRUE) )
View(Clientes_table)
runApp('Documents/Personal/Analytics_Boutique/Tesoreria/Alfa/App_01')
Clientes_table
sum(Clientes_table$De_1_a_30)
names(Clientes_table)
fig_08 <- plot_ly( x = c('De 1 a 30', 'De 31 a 60', 'De 61 a 90', 'Mas de 90'),
y = c(sum(Clientes_table$De_1_a_30)/1000, sum(Clientes_table$De_31_a_60)/1000,
sum(Clientes_table$De_61_a_90)/1000, sum(Clientes_table$Mas_de_90)/1000),
type = "bar", name = "Saldos",
marker = list(color = c('darkblue')),
hovertemplate = paste('<b>Saldo</b>: $%{y:,.2f} miles') )
fig_08 <- fig_08 %>% layout(title = "", xaxis = list(title = ""), yaxis = list(title = "", tickformat = "$,."),
font = list( family = "calibri", size = 14, color = 'black'))
fig_08
runApp('Documents/Personal/Analytics_Boutique/Tesoreria/Alfa/App_01')
View(CXP_table)
CXP_table
Proveedores_table = CXP_table #CXP() #
Proveedores_table <- Proveedores_table %>% filter(!is.na(Proveedor))
Proveedores_table$Dias <- Proveedores_table$Fecha_Pago - Proveedores_table$Fecha_Registro
Proveedores_table$De_1_a_30 <- 0
Proveedores_table$De_31_a_60 <- 0
Proveedores_table$De_61_a_90 <- 0
Proveedores_table$Mas_de_90 <- 0
for( i in 1 : dim(Proveedores_table)[1] ){
if(Proveedores_table$Dias[i] <= 30){
Proveedores_table$De_1_a_30[i] <- Proveedores_table$Saldo[i]
}
if((Proveedores_table$Dias[i] > 30) & (Proveedores_table$Dias[i] <= 60)){
Proveedores_table$De_31_a_60[i] <- Proveedores_table$Saldo[i]
}
if((Proveedores_table$Dias[i] > 60) & (Proveedores_table$Dias[i] <= 90)){
Proveedores_table$De_61_a_90[i] <- Proveedores_table$Saldo[i]
}
if(Proveedores_table$Dias[i] > 90){
Proveedores_table$Mas_de_90[i] <- Proveedores_table$Saldo[i]
}
}
Proveedores_table <- Proveedores_table %>% group_by(Proveedor) %>%
summarise( Saldo = sum(as.numeric(Saldo), na.rm=TRUE),
Documentos = n(),
Dias = mean(Dias, na.rm=TRUE),
De_1_a_30 = sum(as.numeric(De_1_a_30), na.rm=TRUE),
De_31_a_60 = sum(as.numeric(De_31_a_60), na.rm=TRUE),
De_61_a_90 = sum(as.numeric(De_61_a_90), na.rm=TRUE),
Mas_de_90 = sum(as.numeric(Mas_de_90), na.rm=TRUE) )
View(Proveedores_table)
fig_09 <- plot_ly( Proveedores_table, labels = ~Proveedores_table$Cliente,
values = ~Proveedores_table$Saldo/1000, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', comma(Proveedores_table$Saldo/1000), ' miles'),
marker = list(colors = Proveedores_table$Saldo,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE )
fig_09 <- fig_09 %>% layout(title = '',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig_09
fig_09 <- plot_ly( Proveedores_table, labels = ~Proveedores_table$Proveedor,
values = ~Proveedores_table$Saldo/1000, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', comma(Proveedores_table$Saldo/1000), ' miles'),
marker = list(colors = Proveedores_table$Saldo,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE )
fig_09 <- fig_09 %>% layout(title = '',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig_09
fig_10 <- plot_ly( x = c('De 1 a 30', 'De 31 a 60', 'De 61 a 90', 'Mas de 90'),
y = c(sum(Proveedores_table$De_1_a_30)/1000, sum(Proveedores_table$De_31_a_60)/1000,
sum(Proveedores_table$De_61_a_90)/1000, sum(Proveedores_table$Mas_de_90)/1000),
type = "bar", name = "Saldos",
marker = list(color = c('darkblue')),
hovertemplate = paste('<b>Saldo</b>: $%{y:,.2f} miles') )
fig_10 <- fig_10 %>% layout(title = "", xaxis = list(title = ""), yaxis = list(title = "", tickformat = "$,."),
font = list( family = "calibri", size = 14, color = 'black'))
fig_10
runApp('Documents/Personal/Analytics_Boutique/Tesoreria/Alfa/App_01')
# MIO
library(rsconnect)
rsconnect::setAccountInfo(name='benjov',
token='6667F0C5CE33274A23034B3359994A9B',
secret='wvEmBzHd3f29P/7YIVfWC+2DLdvYrA9X31LLrWPO')
deployApp("/Users/benjaminolivavazquez/Documents/Personal/Analytics_Boutique/Tesoreria/Alfa/App_01",
appName = "Treasury",
appTitle = "Treasury")
#
library(dplyr)
library(ggplot2)
#****************************************************************************************
getwd()
setwd("/Users/benjaminolivavazquez/Documents/Personal/Cursos_CIDE/Estadistica_II_2022/Estadistica-II-2022/R/Clase_01")
getwd()
ls
ls()
args(rnorm)
rnorm(10, mean = 0, sd = 2)
# Importante (para Simulaciones que sean replicables):
#set.seed(10101) # Es una constate (la semilla) que fija la serie de numeros aleatorios
Z_t <- rnorm(1000, mean = 0, sd = 2)
mean(Z_t)
sd(Z_t)
# Importante (para Simulaciones que sean replicables):
#set.seed(10101) # Es una constate (la semilla) que fija la serie de numeros aleatorios
Z_t <- rnorm(1000, mean = 0, sd = 2)
mean(Z_t)
sd(Z_t)
hist(Z_t,
main = "Histograma del proceso Z_t, Normal(0, 2)",
xlab = "Z_t",
ylab = "Frecuencia")
Moneda <- function(R, Time){
# R: es el conjunto del cual se extrae la muestra - espacio muestral
# Time: es el tamaño de la serie resultante
# S: es el tamaño de los subconjuntos generados
U_t <- replicate(Time,
sample(R, size = 1, replace = TRUE) )
# Esta es una funcion que genera un vector de resultados aleatorios de los posibles en
# el espacio muestral, tomando muestras de tamaño 1
return(U_t)
}
Resultados <- c(-1, 1)
#
Periodos <- 10000
# Creamos un data frame de nombre "U" con una columna llamada "Tiempo"
U <- data.frame(Tiempo = c(1:Periodos))
View(U)
Moneda( Resultados, Periodos )
View(U)
U$U_t <- Moneda( Resultados, Periodos )
View(U)
#
mu = mean(U$U_t)
mu
#
S2 = var(U$U_t)
S2
# Agregamos al data frame una columna SU_t que llenamos de ceros (0)
U$SU_t <- replicate(Periodos, 0)
View(U)
View(U)
View(U)
# El siguiente ciclo recorre el data frame para ir acumulando los valores de U_t
# y colocando el valor acumulado en SU_t
for(i in 1:Periodos){
U$SU_t[i] <- sum( U$U_t[1:i] )
}
View(U)
U$SU_t[10]
U$SU_t[10000]
sum( U$U_t[1:10] )
U
# GRÁFICA
ggplot(data = U, aes( x = Tiempo, y = SU_t) ) +
geom_line(size = 0.5, color = "darkblue") +
#geom_point(size = 1.0, color = "darkblue") +
#theme_bw() +
theme(legend.position = "none") +
theme(legend.title = element_blank()) +
guides(col = guide_legend(nrow = 1, byrow = TRUE)) +
xlab("Tiempo") +
ylab("Xt") +
theme(plot.title = element_text(size = 11, face = "bold", hjust = 0)) +
theme(plot.subtitle = element_text(size = 10, hjust = 0)) +
theme(plot.caption = element_text(size = 10, hjust = 0)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
labs(
title = "Gráfica de la serie de lanzamientos de una moneda",
subtitle = "Valores en pesos",
caption = "Fuente: Elaboración propia. \nNotas: Simulación del lanzamiento de una moneda."
)
# GRÁFICA
ggplot(data = U, aes( x = Tiempo, y = SU_t) ) +
geom_line(size = 0.5, color = "darkblue") +
#geom_point(size = 1.0, color = "darkblue") +
#theme_bw() +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
guides(col = guide_legend(nrow = 1, byrow = TRUE)) +
xlab("Tiempo") +
ylab("Xt") +
theme(plot.title = element_text(size = 11, face = "bold", hjust = 0)) +
theme(plot.subtitle = element_text(size = 10, hjust = 0)) +
theme(plot.caption = element_text(size = 10, hjust = 0)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
labs(
title = "Gráfica de la serie de lanzamientos de una moneda",
subtitle = "Valores en pesos",
caption = "Fuente: Elaboración propia. \nNotas: Simulación del lanzamiento de una moneda."
)
?ggplot
# Utilizaremos una función guardada en un archivo a parte
# Llamamos a la función:
source("Caminata.R")
View(U)
# Definimos argumentos de la función
Opciones <- c(-1, 1)
#
Soporte <- 10000
# Vamos a réplicar el proceso con estos parámetros
Rango <- 300
#
Caminos <- 10
for(i in 1:Caminos){
TT <- data.matrix(data.frame(Caminata(Opciones, Soporte)[1]))
#
G_t <- data.matrix(data.frame(Caminata(Opciones, Soporte)[2]))
#
plot(TT, G_t, col = "blue", type = "l", ylab = "Ganancias", xlab = "Tiempo", ylim = c(-Rango,Rango))
#
par(new = TRUE)
#
i <- i +1
}
#
par(new = FALSE)
